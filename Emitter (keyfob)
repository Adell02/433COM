#include <RCSwitch.h>

String cod0,cod1,cod2,cod3;


RCSwitch receiver = RCSwitch();
RCSwitch transmitter = RCSwitch();

String decimalToBinary(long value){
  String result = "";
  if(value == 0){
    return "0";
  }else{
    while(value > 0){
      if((value % 2) == 0){
        result = "0" + result;
      }else{
        result = "1" + result;
      }
      value /= 2;
    }
  }
  return result;
}

long binaryToDecimal(String value){
    int base = 2; 
    int length = value.length() +1;
    char valueAsArray[length];
    value.toCharArray(valueAsArray, length);
    
    return strtol(valueAsArray, NULL, base);
}

String codificar (String c, String m) {
  int i, j;
  String encod = "", encod1 = "", encod2 = "";
  String key[] = {"0000", "0001", "0010", "0011", "0100", "0101", "0110", "0111", "1000", "1001", "1010", "1011", "1100", "1101", "1110", "1111"};

  for (i = 0; i < 8; i++) {
    if ((c[i] == '1' && m[i] == '0') || (c[i] == '0' && m[i] == '1'))
      encod += '1';

    else
      encod += '0';
  }

  for (i = 0; i < 8; i++)
  {
    if (i < 4) {
      encod1 += encod[i];
    }
    else if (i >= 4) {
      encod2 += encod[i];
    }

  }

  if (key[0] == encod1 ) {
    encod1 = key[7];
  }
  else if (key[1] == encod1 ) {
    encod1 = key[8];
  }
  else if (key[2] == encod1 ) {
    encod1 = key[4];
  }
  else if (key[3] == encod1 ) {
    encod1 = key[6];
  }
  else if (key[4] == encod1 ) {
    encod1 = key[9];
  }
  else if (key[5] == encod1 ) {
    encod1 = key[11];
  }
  else if (key[6] == encod1 ) {
    encod1 = key[13];
  }
  else if (key[7] == encod1 ) {
    encod1 = key[15];
  }
  else if (key[8] == encod1 ) {
    encod1 = key[1];
  }
  else if (key[9] == encod1 ) {
    encod1 = key[14];
  }
  else if (key[10] == encod1 ) {
    encod1 = key[0];
  }
  else if (key[11] == encod1 ) {
    encod1 = key[3];
  }
  else if (key[12] == encod1 ) {
    encod1 = key[2];
  }
  else if (key[13] == encod1 ) {
    encod1 = key[10];
  }
  else if (key[14] == encod1 ) {
    encod1 = key[12];
  }
  else if (key[15] == encod1 ) {
    encod1 = key[5];
  }


  if (key[0] == encod2 ) {
    encod2 = key[7];
  }
  else if (key[1] == encod2 ) {
    encod2 = key[8];
  }
  else if (key[2] == encod2 ) {
    encod2 = key[4];
  }
  else if (key[3] == encod2 ) {
    encod2 = key[6];
  }
  else if (key[4] == encod2 ) {
    encod2 = key[9];
  }
  else if (key[5] == encod2 ) {
    encod2 = key[11];
  }
  else if (key[6] == encod2 ) {
    encod2 = key[13];
  }
  else if (key[7] == encod2 ) {
    encod2 = key[15];
  }
  else if (key[8] == encod2 ) {
    encod2 = key[1];
  }
  else if (key[9] == encod2 ) {
    encod2 = key[14];
  }
  else if (key[10] == encod2 ) {
    encod2 = key[0];
  }
  else if (key[11] == encod2 ) {
    encod2 = key[3];
  }
  else if (key[12] == encod2 ) {
    encod2 = key[2];
  }
  else if (key[13] == encod2 ) {
    encod2 = key[10];
  }
  else if (key[14] == encod2 ) {
    encod2 = key[12];
  }
  else if (key[15] == encod2 ) {
    encod2 = key[5];
  }

  encod = encod1 + encod2;

  return encod;
}


String fill_zeros(String bin)
{
  while (bin.length() < 8)
  {
    bin = "0" + bin;
  }

  return (bin);
}

String invertirCadena(String s) {
  String temporal = "";
  for (int m = s.length() - 1; m >= 0; m--)
    temporal += s[m];
  return temporal;
}


String create_IV(String h, String m, String s){
  String c0 = "", ret1 = "";
  int i, j;

  h = invertirCadena(h);
  s = invertirCadena(s);
  
  for (i = 0; i < 8; i++){
    if ((h[i] == '1' && m[i] == '0')||(h[i] == '0' && m[i] == '1'))
      ret1 += '1';

    else
      ret1 += '0';
  }

  for (j = 0; j < 8; j++){
    if ((ret1[j] == '1' && s[j] == '0')||(ret1[j] == '0' && s[j] == '1'))
      c0 += '1';

    else
      c0 += '0';
  }

  return c0;
}


void setup() {
  pinMode(3, INPUT_PULLUP);
  pinMode(4, OUTPUT);
  //pinMode(5, OUTPUT);
  Serial.begin(9600); //Transmitter is connected to Arduino Pin #10
  transmitter.enableTransmit(9);
  transmitter.setProtocol(1);
  transmitter.setPulseLength(400);
  receiver.enableReceive(0);  // Receiver on interrupt 0 => that is pin #2
  

}

void loop() {
  if (digitalRead(3) == LOW) {
    digitalWrite(13, HIGH);
    delay(100);
    transmitter.send("101010");
    delay(200);
    digitalWrite(13, LOW);

    if (receiver.available() && receiver.getReceivedProtocol() == 2) {
      int i = 0, rebut;
      String b_h, b_m, b_s;
      String blocks[5]; 
           
      //digitalWrite(5,HIGH);
      for (i = 0; i < 5; i++){
        rebut = receiver.getReceivedValue();
        Serial.println(rebut);
        blocks[i] = fill_zeros(decimalToBinary(rebut));
        Serial.println(blocks[i]);
        receiver.resetAvailable();
        delay(650);
      }

      //digitalWrite(5,LOW);
      b_h = blocks[0];
      b_m = blocks[3];
      b_s = blocks[4];
      
      cod0=create_IV(b_h,b_m,b_s);

      cod1 = codificar( cod0,"10111111");
      cod2 = codificar(cod1,"10101001");
      cod3 = codificar(cod2,"11001001");

      digitalWrite(4, HIGH);
      delay(100);
      Serial.println();
      Serial.println(binaryToDecimal(cod1));
      Serial.println();
      transmitter.send(binaryToDecimal(cod1),8);
      delay(200);
      Serial.println();
      Serial.println(binaryToDecimal(cod2));
      Serial.println();
      transmitter.send(binaryToDecimal(cod2),8);
      delay(200);
      Serial.println();
      Serial.println(binaryToDecimal(cod3));
      Serial.println();
      transmitter.send(binaryToDecimal(cod3),8);
      
      Serial.println(b_h);
      Serial.println(b_m);
      Serial.println(b_s);
      
      Serial.println();

      Serial.println(cod0);
      
      Serial.println();

      Serial.println(cod1);
      Serial.println(cod2);
      Serial.println(cod3);

      digitalWrite(4,LOW);
      
      
    }

  }
}
